{"ast":null,"code":"var _jsxFileName = \"/Users/julianestefan/Documents/Vero/09-calendar-app/calendar-app/src/components/calendar/CalendarScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { NavBar } from '../ui/NavBar';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'moment/locale/es';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { messages } from '../../helpers/calendar-messages-esp';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiOpenModal } from '../actions/ui';\nimport { eventSetActive } from '../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmoment.locale('es');\nconst localizer = momentLocalizer(moment);\nexport const CalendarScreen = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    events\n  } = useSelector(state => state.calendar);\n  const [lastView, setlastView] = useState(localStorage.getItem('lastView') || 'month');\n\n  const onDoubleClick = e => {\n    dispatch(uiOpenModal());\n  };\n\n  const onSelectEvent = e => {\n    dispatch(eventSetActive(e));\n  };\n\n  const onViewChange = e => {\n    setlastView(e);\n    localStorage.setItem('lastView', e);\n  };\n\n  const eventStyleGetter = (event, start, end, isSelected) => {\n    const style = {\n      backgroundColor: '#367CF7',\n      borderRadious: '0px',\n      opacity: 0.8,\n      display: 'block',\n      color: 'white'\n    };\n    return {\n      style\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-screen\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      localizer: localizer,\n      events: events,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      messages: messages,\n      eventPropGetter: eventStyleGetter,\n      onDoubleClickEvent: onDoubleClick,\n      onSelectEvent: onSelectEvent,\n      onView: onViewChange,\n      view: lastView,\n      components: {\n        event: CalendarEvent\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AddNewFab, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DeleteEventFab, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CalendarModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CalendarScreen, \"H8hXS0ziqPBZYHYRh/TbevhO5vI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CalendarScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarScreen\");","map":{"version":3,"sources":["/Users/julianestefan/Documents/Vero/09-calendar-app/calendar-app/src/components/calendar/CalendarScreen.js"],"names":["React","useState","NavBar","Calendar","momentLocalizer","moment","messages","CalendarEvent","CalendarModal","useDispatch","useSelector","uiOpenModal","eventSetActive","AddNewFab","DeleteEventFab","locale","localizer","CalendarScreen","dispatch","events","state","calendar","lastView","setlastView","localStorage","getItem","onDoubleClick","e","onSelectEvent","onViewChange","setItem","eventStyleGetter","event","start","end","isSelected","style","backgroundColor","borderRadious","opacity","display","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAAQC,QAAR,EAAkBC,eAAlB,QAAwC,oBAAxC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,kBAAP;AACA,OAAO,mDAAP;AACA,SAASC,QAAT,QAAyB,qCAAzB;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,cAAT,QAA+B,sBAA/B;;AAIAT,MAAM,CAACU,MAAP,CAAc,IAAd;AAEA,MAAMC,SAAS,GAAGZ,eAAe,CAACC,MAAD,CAAjC;AAEA,OAAO,MAAMY,cAAc,GAAG,MAAM;AAAA;;AAElC,QAAMC,QAAQ,GAAET,WAAW,EAA3B;AACA,QAAM;AAACU,IAAAA;AAAD,MAAWT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,QAAhB,CAA5B;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BtB,QAAQ,CAAEuB,YAAY,CAACC,OAAb,CAAqB,UAArB,KAAmC,OAArC,CAAxC;;AAEA,QAAMC,aAAa,GAAGC,CAAD,IAAM;AACzBT,IAAAA,QAAQ,CAACP,WAAW,EAAZ,CAAR;AAED,GAHD;;AAKA,QAAMiB,aAAa,GAAGD,CAAD,IAAM;AACxBT,IAAAA,QAAQ,CAAEN,cAAc,CAACe,CAAD,CAAhB,CAAR;AACF,GAFD;;AAIA,QAAME,YAAY,GAAGF,CAAD,IAAO;AACzBJ,IAAAA,WAAW,CAAEI,CAAF,CAAX;AACAH,IAAAA,YAAY,CAACM,OAAb,CAAqB,UAArB,EAAiCH,CAAjC;AACD,GAHD;;AAKA,QAAMI,gBAAgB,GAAE,CAACC,KAAD,EAAQC,KAAR,EAAeC,GAAf,EAAoBC,UAApB,KAAmC;AAExD,UAAMC,KAAK,GAAG;AACZC,MAAAA,eAAe,EAAE,SADL;AAEZC,MAAAA,aAAa,EAAE,KAFH;AAGZC,MAAAA,OAAO,EAAE,GAHG;AAIZC,MAAAA,OAAO,EAAE,OAJG;AAKZC,MAAAA,KAAK,EAAE;AALK,KAAd;AAQA,WAAO;AACLL,MAAAA;AADK,KAAP;AAGF,GAbD;;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI,QAAC,QAAD;AACI,MAAA,SAAS,EAAEpB,SADf;AAEI,MAAA,MAAM,EAAEG,MAFZ;AAGI,MAAA,aAAa,EAAC,OAHlB;AAII,MAAA,WAAW,EAAC,KAJhB;AAKI,MAAA,QAAQ,EAAEb,QALd;AAMI,MAAA,eAAe,EAAGyB,gBANtB;AAOI,MAAA,kBAAkB,EAAGL,aAPzB;AAQI,MAAA,aAAa,EAAGE,aARpB;AASI,MAAA,MAAM,EAAGC,YATb;AAUI,MAAA,IAAI,EAAGP,QAVX;AAWI,MAAA,UAAU,EAAG;AACXU,QAAAA,KAAK,EAAEzB;AADI;AAXjB;AAAA;AAAA;AAAA;AAAA,YAHJ,eAkBI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAlBJ,eAmBI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAnBJ,eAqBI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CA7DM;;GAAMU,c;UAEKR,W,EACCC,W;;;KAHNO,c","sourcesContent":["import React, { useState } from 'react';\nimport { NavBar } from '../ui/NavBar';\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\nimport moment from 'moment';\nimport 'moment/locale/es';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { messages } from '../../helpers/calendar-messages-esp';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiOpenModal } from '../actions/ui';\nimport { eventSetActive } from '../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\n\n\n\nmoment.locale('es');\n\nconst localizer = momentLocalizer(moment);\n\nexport const CalendarScreen = () => {\n\n  const dispatch= useDispatch();\n  const {events} = useSelector(state => state.calendar)\n  const [lastView, setlastView] = useState (localStorage.getItem('lastView')|| 'month');\n  \n  const onDoubleClick= (e)=> {\n    dispatch(uiOpenModal());\n\n  }\n\n  const onSelectEvent= (e)=> {\n     dispatch (eventSetActive(e));\n  }\n\n  const onViewChange= (e) => {\n    setlastView (e)\n    localStorage.setItem('lastView', e);\n  }\n\n  const eventStyleGetter= (event, start, end, isSelected) => {\n\n     const style=  {\n       backgroundColor: '#367CF7',\n       borderRadious: '0px',\n       opacity: 0.8 ,\n       display: 'block',\n       color: 'white'\n     }\n\n     return {\n       style\n     }\n  }\n\n  return (\n    <div className='calendar-screen'>\n        <NavBar/>\n\n        <Calendar\n            localizer={localizer}\n            events={events}\n            startAccessor=\"start\"\n            endAccessor=\"end\"\n            messages={messages}\n            eventPropGetter= {eventStyleGetter}\n            onDoubleClickEvent= {onDoubleClick}\n            onSelectEvent= {onSelectEvent}\n            onView= {onViewChange}\n            view= {lastView}\n            components= {{\n              event: CalendarEvent\n            }}\n        />\n        <AddNewFab/>\n        <DeleteEventFab/>\n        \n        <CalendarModal/>\n\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}