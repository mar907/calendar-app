{"ast":null,"code":"import { fetchConToken } from \"../../helpers/fetch\";\nimport { types } from \"../types/types\";\nexport const eventStartAddNew = event => {\n  return async (dispatch, getState) => {\n    const {\n      uid,\n      name\n    } = getState().auth;\n\n    try {\n      const resp = await fetchConToken('events', event, 'POST');\n      const body = await resp.json();\n\n      if (body.ok) {\n        event.id = body.event.id;\n        event.user = {\n          _id: uid,\n          name: name\n        };\n        dispatch(eventAddNew(event));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst eventAddNew = event => ({\n  type: types.eventAddNew,\n  payload: event\n});\n\nexport const eventSetActive = event => ({\n  type: types.eventSetActive,\n  payload: event\n});\nexport const eventClearActiveEvent = () => ({\n  type: types.eventClearActiveEvent\n});\nexport const eventUpdated = event => ({\n  type: types.eventUpdated,\n  payload: event\n});\nexport const eventDeleted = () => ({\n  type: types.eventDeleted\n});","map":{"version":3,"sources":["/Users/julianestefan/Documents/Vero/09-calendar-app/calendar-app/src/components/actions/events.js"],"names":["fetchConToken","types","eventStartAddNew","event","dispatch","getState","uid","name","auth","resp","body","json","ok","id","user","_id","eventAddNew","error","console","log","type","payload","eventSetActive","eventClearActiveEvent","eventUpdated","eventDeleted"],"mappings":"AAAA,SAASA,aAAT,QAA8B,qBAA9B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAGA,OAAO,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AACvC,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAEjC,UAAM;AAACC,MAAAA,GAAD;AAAMC,MAAAA;AAAN,QAAcF,QAAQ,GAAGG,IAA/B;;AAEA,QAAI;AACA,YAAMC,IAAI,GAAE,MAAMT,aAAa,CAAE,QAAF,EAAYG,KAAZ,EAAmB,MAAnB,CAA/B;AACA,YAAMO,IAAI,GAAE,MAAMD,IAAI,CAACE,IAAL,EAAlB;;AAEA,UAAKD,IAAI,CAACE,EAAV,EAAc;AACVT,QAAAA,KAAK,CAACU,EAAN,GAAWH,IAAI,CAACP,KAAL,CAAWU,EAAtB;AACAV,QAAAA,KAAK,CAACW,IAAN,GAAa;AACTC,UAAAA,GAAG,EAAET,GADI;AAETC,UAAAA,IAAI,EAAEA;AAFG,SAAb;AAIAH,QAAAA,QAAQ,CAACY,WAAW,CAACb,KAAD,CAAZ,CAAR;AACH;AACJ,KAZD,CAYE,OAAOc,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAaF,KAAb;AACH;AAEJ,GApBD;AAqBH,CAtBM;;AAyBP,MAAMD,WAAW,GAAGb,KAAD,KAAY;AAC3BiB,EAAAA,IAAI,EAAEnB,KAAK,CAACe,WADe;AAE3BK,EAAAA,OAAO,EAAElB;AAFkB,CAAZ,CAAnB;;AAIA,OAAO,MAAMmB,cAAc,GAAGnB,KAAD,KAAY;AACrCiB,EAAAA,IAAI,EAAEnB,KAAK,CAACqB,cADyB;AAErCD,EAAAA,OAAO,EAAElB;AAF4B,CAAZ,CAAtB;AAIP,OAAO,MAAMoB,qBAAqB,GAAG,OAAO;AAACH,EAAAA,IAAI,EAAEnB,KAAK,CAACsB;AAAb,CAAP,CAA9B;AAEP,OAAO,MAAMC,YAAY,GAAGrB,KAAD,KAAY;AACnCiB,EAAAA,IAAI,EAAEnB,KAAK,CAACuB,YADuB;AAEnCH,EAAAA,OAAO,EAAElB;AAF0B,CAAZ,CAApB;AAKP,OAAO,MAAMsB,YAAY,GAAG,OAAO;AAACL,EAAAA,IAAI,EAAEnB,KAAK,CAACwB;AAAb,CAAP,CAArB","sourcesContent":["import { fetchConToken } from \"../../helpers/fetch\";\nimport { types } from \"../types/types\";\n\n\nexport const eventStartAddNew = (event) => {\n    return async (dispatch, getState) => {\n\n        const {uid, name} = getState().auth;\n\n        try {\n            const resp= await fetchConToken ('events', event, 'POST');\n            const body= await resp.json();\n\n            if ( body.ok) {\n                event.id = body.event.id;\n                event.user = {\n                    _id: uid,\n                    name: name\n                }\n                dispatch(eventAddNew(event));\n            }\n        } catch (error) {\n            console.log (error);\n        }\n    \n    }\n}\n\n\nconst eventAddNew= (event) => ({\n    type: types.eventAddNew,\n    payload: event\n});\nexport const eventSetActive= (event) => ({\n    type: types.eventSetActive,\n    payload: event\n});\nexport const eventClearActiveEvent = () => ({type: types.eventClearActiveEvent});\n\nexport const eventUpdated= (event) => ({\n    type: types.eventUpdated,\n    payload: event\n});\n\nexport const eventDeleted = () => ({type: types.eventDeleted});"]},"metadata":{},"sourceType":"module"}