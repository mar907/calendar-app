{"ast":null,"code":"import Swal from \"sweetalert2\";\nimport { fetchConToken, fetchSinToken } from \"../../helpers/fetch\";\nimport { types } from \"../types/types\";\nimport { eventLogout } from \"./events\";\nexport const startLogin = (email, password) => {\n  return async dispatch => {\n    const resp = await fetchSinToken('auth', {\n      email,\n      password\n    }, 'POST');\n    const body = await resp.json();\n\n    if (body.ok) {\n      localStorage.setItem('token', body.token);\n      localStorage.setItem('token-init-date', new Date().getTime());\n      dispatch(login({\n        uid: body.uid,\n        name: body.name\n      }));\n    } else {\n      Swal.fire('Error', body.msg, 'error');\n    }\n  };\n};\nexport const startRegister = (email, password, name) => {\n  return async dispatch => {\n    const resp = await fetchSinToken('auth/new', {\n      email,\n      password,\n      name\n    }, 'POST');\n    const body = await resp.json();\n\n    if (body.ok) {\n      localStorage.setItem('token', body.token);\n      localStorage.setItem('token-init-date', new Date().getTime());\n      dispatch(login({\n        uid: body.uid,\n        name: body.name\n      }));\n    } else {\n      Swal.fire('Error', body.msg, 'error');\n    }\n  };\n};\nexport const startChecking = () => {\n  return async dispatch => {\n    const resp = await fetchConToken('auth/renew');\n    const body = await resp.json();\n\n    if (body.ok) {\n      localStorage.setItem('token', body.token);\n      localStorage.setItem('token-init-date', new Date().getTime());\n      dispatch(login({\n        uid: body.uid,\n        name: body.name\n      }));\n    } else {\n      dispatch(checkingFinish());\n    }\n  };\n};\n\nconst checkingFinish = () => ({\n  type: types.authCheckingFinish\n});\n\nconst login = user => ({\n  type: types.authLogin,\n  payload: user\n});\n\nexport const startLogout = () => {\n  return dispatch => {\n    localStorage.clear();\n    dispatch(eventLogout());\n    dispatch(logout());\n  };\n};\n\nconst logout = () => ({\n  type: types.authLogout\n});","map":{"version":3,"sources":["/Users/julianestefan/Documents/Vero/09-calendar-app/calendar-app/src/components/actions/auth.js"],"names":["Swal","fetchConToken","fetchSinToken","types","eventLogout","startLogin","email","password","dispatch","resp","body","json","ok","localStorage","setItem","token","Date","getTime","login","uid","name","fire","msg","startRegister","startChecking","checkingFinish","type","authCheckingFinish","user","authLogin","payload","startLogout","clear","logout","authLogout"],"mappings":"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","sourcesContent":["import Swal from \"sweetalert2\";\nimport { fetchConToken, fetchSinToken } from \"../../helpers/fetch\"\nimport { types } from \"../types/types\";\nimport { eventLogout } from \"./events\";\n\n\nexport const startLogin= (email, password) => {\n    return  async (dispatch) => {\n        const resp = await fetchSinToken ('auth', {email, password}, 'POST');\n        const body = await resp.json();\n\n        if(body.ok) {\n            localStorage.setItem ('token', body.token);\n            localStorage.setItem ('token-init-date',new Date().getTime());\n\n            dispatch (login({\n                uid: body.uid,\n                name: body.name\n            }))\n        } else {\n            Swal.fire ('Error', body.msg, 'error');\n        }\n\n    }\n}\n\nexport const startRegister=  (email, password, name) => {\n     return async(dispatch) => {\n        const resp = await fetchSinToken ('auth/new', {email, password, name}, 'POST');\n        const body = await resp.json();\n\n        if(body.ok) {\n            localStorage.setItem ('token', body.token);\n            localStorage.setItem ('token-init-date',new Date().getTime());\n\n            dispatch (login({\n                uid: body.uid,\n                name: body.name\n            }))\n        } else {\n            Swal.fire ('Error', body.msg, 'error');\n        }\n\n    }\n}\n     \nexport const startChecking= () => {\n    return async (dispatch) => {\n        const resp = await fetchConToken ('auth/renew');\n        const body = await resp.json();\n\n        if(body.ok) {\n            localStorage.setItem ('token', body.token);\n            localStorage.setItem ('token-init-date',new Date().getTime());\n\n            dispatch (login({\n                uid: body.uid,\n                name: body.name\n            }))\n        } else {\n            dispatch(checkingFinish());\n        }\n\n    }\n}\n\nconst checkingFinish= () => ({type : types.authCheckingFinish});\n  \n\nconst login= (user) => ({\n    type: types.authLogin,\n    payload: user\n})\n\nexport const startLogout = () => {\n    return (dispatch) => {\n        localStorage.clear();\n        dispatch(eventLogout());\n        dispatch(logout());\n\n    }\n}\n\nconst logout = () => ({type: types.authLogout})"]},"metadata":{},"sourceType":"module"}