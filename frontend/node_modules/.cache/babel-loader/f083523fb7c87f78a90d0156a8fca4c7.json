{"ast":null,"code":"var _jsxFileName = \"/Users/julianestefan/Documents/Vero/09-calendar-app/calendar-app/src/components/calendar/CalendarScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { NavBar } from '../ui/NavBar';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment, { months } from 'moment';\nimport 'moment/locale/es';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { messages } from '../../helpers/calendar-messages-esp';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../actions/ui';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmoment.locale('es');\nconst localizer = momentLocalizer(moment);\nconst events = [{\n  title: 'cumpleaños del jefe',\n  start: moment().toDate(),\n  end: moment().add(2, 'hours').toDate(),\n  bgcolor: '#fafafa',\n  notes: 'comprar el pastel',\n  user: {\n    _id: '123',\n    name: 'veronica'\n  }\n}];\nexport const CalendarScreen = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [lastView, setlastView] = useState(localStorage.getItem('lastView') || 'month');\n\n  const onDoubleClick = e => {\n    dispatch(uiOpenModal());\n  };\n\n  const onSelectEvent = e => {};\n\n  const onViewChange = e => {\n    setlastView(e);\n    localStorage.setItem('lastView', e);\n  };\n\n  const eventStyleGetter = (event, start, end, isSelected) => {\n    const style = {\n      backgroundColor: '#367CF7',\n      borderRadious: '0px',\n      opacity: 0.8,\n      display: 'block',\n      color: 'white'\n    };\n    return {\n      style\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-screen\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      localizer: localizer,\n      events: events,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      messages: messages,\n      eventPropGetter: eventStyleGetter,\n      onDoubleClickEvent: onDoubleClick,\n      onSelectEvent: onSelectEvent,\n      onView: onViewChange,\n      view: lastView,\n      components: {\n        event: CalendarEvent\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CalendarModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CalendarScreen, \"ySYXIRnTL1LRSAUSAgqdzUQy/rA=\", false, function () {\n  return [useDispatch];\n});\n\n_c = CalendarScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarScreen\");","map":{"version":3,"sources":["/Users/julianestefan/Documents/Vero/09-calendar-app/calendar-app/src/components/calendar/CalendarScreen.js"],"names":["React","useState","NavBar","Calendar","momentLocalizer","moment","months","messages","CalendarEvent","CalendarModal","useDispatch","uiOpenModal","locale","localizer","events","title","start","toDate","end","add","bgcolor","notes","user","_id","name","CalendarScreen","dispatch","lastView","setlastView","localStorage","getItem","onDoubleClick","e","onSelectEvent","onViewChange","setItem","eventStyleGetter","event","isSelected","style","backgroundColor","borderRadious","opacity","display","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAAQC,QAAR,EAAkBC,eAAlB,QAAwC,oBAAxC;AACA,OAAOC,MAAP,IAAiBC,MAAjB,QAA+B,QAA/B;AACA,OAAO,kBAAP;AACA,OAAO,mDAAP;AACA,SAASC,QAAT,QAAyB,qCAAzB;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAGAN,MAAM,CAACO,MAAP,CAAc,IAAd;AAEA,MAAMC,SAAS,GAAGT,eAAe,CAACC,MAAD,CAAjC;AAEA,MAAMS,MAAM,GAAE,CAAC;AACbC,EAAAA,KAAK,EAAE,qBADM;AAEbC,EAAAA,KAAK,EAAEX,MAAM,GAAGY,MAAT,EAFM;AAGbC,EAAAA,GAAG,EAAEb,MAAM,GAAGc,GAAT,CAAa,CAAb,EAAgB,OAAhB,EAAyBF,MAAzB,EAHQ;AAIbG,EAAAA,OAAO,EAAE,SAJI;AAKbC,EAAAA,KAAK,EAAE,mBALM;AAMbC,EAAAA,IAAI,EAAC;AACHC,IAAAA,GAAG,EAAE,KADF;AAEHC,IAAAA,IAAI,EAAE;AAFH;AANQ,CAAD,CAAd;AAYA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAElC,QAAMC,QAAQ,GAAEhB,WAAW,EAA3B;AACA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0B3B,QAAQ,CAAE4B,YAAY,CAACC,OAAb,CAAqB,UAArB,KAAmC,OAArC,CAAxC;;AAEA,QAAMC,aAAa,GAAGC,CAAD,IAAM;AACzBN,IAAAA,QAAQ,CAACf,WAAW,EAAZ,CAAR;AAED,GAHD;;AAKA,QAAMsB,aAAa,GAAGD,CAAD,IAAM,CAE1B,CAFD;;AAIA,QAAME,YAAY,GAAGF,CAAD,IAAO;AACzBJ,IAAAA,WAAW,CAAEI,CAAF,CAAX;AACAH,IAAAA,YAAY,CAACM,OAAb,CAAqB,UAArB,EAAiCH,CAAjC;AACD,GAHD;;AAKA,QAAMI,gBAAgB,GAAE,CAACC,KAAD,EAAQrB,KAAR,EAAeE,GAAf,EAAoBoB,UAApB,KAAmC;AAExD,UAAMC,KAAK,GAAG;AACZC,MAAAA,eAAe,EAAE,SADL;AAEZC,MAAAA,aAAa,EAAE,KAFH;AAGZC,MAAAA,OAAO,EAAE,GAHG;AAIZC,MAAAA,OAAO,EAAE,OAJG;AAKZC,MAAAA,KAAK,EAAE;AALK,KAAd;AAQA,WAAO;AACLL,MAAAA;AADK,KAAP;AAGF,GAbD;;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI,QAAC,QAAD;AACI,MAAA,SAAS,EAAE1B,SADf;AAEI,MAAA,MAAM,EAAEC,MAFZ;AAGI,MAAA,aAAa,EAAC,OAHlB;AAII,MAAA,WAAW,EAAC,KAJhB;AAKI,MAAA,QAAQ,EAAEP,QALd;AAMI,MAAA,eAAe,EAAG6B,gBANtB;AAOI,MAAA,kBAAkB,EAAGL,aAPzB;AAQI,MAAA,aAAa,EAAGE,aARpB;AASI,MAAA,MAAM,EAAGC,YATb;AAUI,MAAA,IAAI,EAAGP,QAVX;AAWI,MAAA,UAAU,EAAG;AACXU,QAAAA,KAAK,EAAE7B;AADI;AAXjB;AAAA;AAAA;AAAA;AAAA,YAHJ,eAkBI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAxDM;;GAAMiB,c;UAEKf,W;;;KAFLe,c","sourcesContent":["import React, { useState } from 'react';\nimport { NavBar } from '../ui/NavBar';\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\nimport moment, { months } from 'moment';\nimport 'moment/locale/es';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { messages } from '../../helpers/calendar-messages-esp';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../actions/ui';\n\n\nmoment.locale('es');\n\nconst localizer = momentLocalizer(moment)\n\nconst events= [{\n  title: 'cumpleaños del jefe',\n  start: moment().toDate(),\n  end: moment().add(2, 'hours').toDate(),\n  bgcolor: '#fafafa',\n  notes: 'comprar el pastel',\n  user:{\n    _id: '123',\n    name: 'veronica'\n  }\n}]\n\nexport const CalendarScreen = () => {\n\n  const dispatch= useDispatch();\n  const [lastView, setlastView] = useState (localStorage.getItem('lastView')|| 'month');\n  \n  const onDoubleClick= (e)=> {\n    dispatch(uiOpenModal());\n\n  }\n\n  const onSelectEvent= (e)=> {\n\n  }\n\n  const onViewChange= (e) => {\n    setlastView (e)\n    localStorage.setItem('lastView', e);\n  }\n\n  const eventStyleGetter= (event, start, end, isSelected) => {\n\n     const style=  {\n       backgroundColor: '#367CF7',\n       borderRadious: '0px',\n       opacity: 0.8 ,\n       display: 'block',\n       color: 'white'\n     }\n\n     return {\n       style\n     }\n  }\n\n  return (\n    <div className='calendar-screen'>\n        <NavBar/>\n\n        <Calendar\n            localizer={localizer}\n            events={events}\n            startAccessor=\"start\"\n            endAccessor=\"end\"\n            messages={messages}\n            eventPropGetter= {eventStyleGetter}\n            onDoubleClickEvent= {onDoubleClick}\n            onSelectEvent= {onSelectEvent}\n            onView= {onViewChange}\n            view= {lastView}\n            components= {{\n              event: CalendarEvent\n            }}\n        />\n        <CalendarModal/>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}